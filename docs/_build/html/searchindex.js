Search.setIndex({"docnames": ["autoapi/index", "autoapi/pangeo_fish/acoustic/index", "autoapi/pangeo_fish/cf/index", "autoapi/pangeo_fish/diff/index", "autoapi/pangeo_fish/distributions/index", "autoapi/pangeo_fish/filters/index", "autoapi/pangeo_fish/functoolz/index", "autoapi/pangeo_fish/healpy/index", "autoapi/pangeo_fish/hmm/decode/index", "autoapi/pangeo_fish/hmm/estimator/index", "autoapi/pangeo_fish/hmm/estimator/naive/index", "autoapi/pangeo_fish/hmm/estimator/split/index", "autoapi/pangeo_fish/hmm/filter/index", "autoapi/pangeo_fish/hmm/index", "autoapi/pangeo_fish/hmm/optimize/index", "autoapi/pangeo_fish/hmm/optimize/logging/index", "autoapi/pangeo_fish/hmm/optimize/optuna/index", "autoapi/pangeo_fish/hmm/optimize/scipy/index", "autoapi/pangeo_fish/index", "autoapi/pangeo_fish/model/index", "autoapi/pangeo_fish/pdf/index", "autoapi/pangeo_fish/tags/index", "autoapi/pangeo_fish/tracks/index", "autoapi/pangeo_fish/utils/index", "index", "installation", "usage"], "filenames": ["autoapi/index.rst", "autoapi/pangeo_fish/acoustic/index.rst", "autoapi/pangeo_fish/cf/index.rst", "autoapi/pangeo_fish/diff/index.rst", "autoapi/pangeo_fish/distributions/index.rst", "autoapi/pangeo_fish/filters/index.rst", "autoapi/pangeo_fish/functoolz/index.rst", "autoapi/pangeo_fish/healpy/index.rst", "autoapi/pangeo_fish/hmm/decode/index.rst", "autoapi/pangeo_fish/hmm/estimator/index.rst", "autoapi/pangeo_fish/hmm/estimator/naive/index.rst", "autoapi/pangeo_fish/hmm/estimator/split/index.rst", "autoapi/pangeo_fish/hmm/filter/index.rst", "autoapi/pangeo_fish/hmm/index.rst", "autoapi/pangeo_fish/hmm/optimize/index.rst", "autoapi/pangeo_fish/hmm/optimize/logging/index.rst", "autoapi/pangeo_fish/hmm/optimize/optuna/index.rst", "autoapi/pangeo_fish/hmm/optimize/scipy/index.rst", "autoapi/pangeo_fish/index.rst", "autoapi/pangeo_fish/model/index.rst", "autoapi/pangeo_fish/pdf/index.rst", "autoapi/pangeo_fish/tags/index.rst", "autoapi/pangeo_fish/tracks/index.rst", "autoapi/pangeo_fish/utils/index.rst", "index.rst", "installation.md", "usage.md"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.acoustic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.cf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.diff</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.distributions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.filters</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.functoolz</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.healpy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.hmm.decode</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.hmm.estimator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.hmm.estimator.naive</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.hmm.estimator.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.hmm.filter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.hmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.hmm.optimize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.hmm.optimize.logging</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.hmm.optimize.optuna</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.hmm.optimize.scipy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.pdf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.tags</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.tracks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pangeo_fish.utils</span></code>", "Welcome to pangeo-fish\u2019s documentation !", "Installation", "Usage"], "terms": {"thi": [0, 7, 8, 9, 10, 11, 15, 23, 25], "page": [0, 24, 25], "contain": [0, 1, 7, 8, 9, 10, 11, 14, 17], "auto": 0, "gener": [0, 1], "document": [0, 25], "1": [0, 25], "pangeo_fish": 0, "hmm": [0, 18], "estim": [0, 13, 14, 17, 18], "naiv": [0, 9, 13, 18], "split": [0, 9, 13, 18], "optim": [0, 13, 18], "log": [0, 13, 14, 18], "optuna": [0, 13, 14, 18], "scipi": [0, 4, 13, 14, 18], "decod": [0, 9, 11, 13, 18], "filter": [0, 9, 10, 11, 13, 18], "acoust": [0, 18], "cf": [0, 4, 18], "diff": [0, 18], "distribut": [0, 18, 20], "functoolz": [0, 18], "healpi": [0, 18], "model": [0, 3, 9, 10, 11, 12, 18], "pdf": [0, 8, 9, 10, 11, 12, 18], "tag": [0, 1, 3, 18], "track": [0, 8, 17, 18], "util": [0, 18], "creat": [0, 15, 25], "sphinx": 0, "autoapi": 0, "extract_receiv": 1, "detect": 1, "column": 1, "receiver_id": [1, 7], "deploy_latitud": 1, "deploy_longitud": 1, "station_nam": 1, "extract": 1, "receiv": 1, "inform": [1, 23], "from": [1, 7, 9, 11, 20, 25], "databas": 1, "panda": 1, "datafram": 1, "all": [1, 7, 25], "list": [1, 4, 7, 9, 10, 11, 20], "hashabl": [1, 4, 7, 9, 10, 11, 20], "default": [1, 4, 7, 9, 10, 11, 15], "specif": 1, "The": [1, 4, 7, 8, 9, 10, 11, 12, 14, 17, 20], "search_acoustic_tag_id": 1, "tag_databas": 1, "pit_tag_id": 1, "translat": [1, 8], "dst": 1, "id": [1, 7], "emitt": 1, "about": 1, "individu": 1, "deploy": 1, "str": [1, 7, 14, 17], "valueerror": 1, "given": [1, 7, 9, 10, 11, 12], "i": [1, 4, 7, 9, 10, 11, 14, 15, 17, 23], "count_detect": 1, "count": 1, "amount": 1, "interv": [1, 14, 17], "xarrai": [1, 4, 7, 25], "dataset": [1, 4, 7, 8, 9, 10, 11, 14, 17], "valu": [1, 4, 9, 10, 11], "group": 1, "can": [1, 4, 7, 9, 10, 11, 25], "anyth": [1, 4], "flox": [1, 25], "accept": 1, "per": [1, 9, 10, 11, 12], "xarray_reduc": 1, "groupbi": 1, "bounds_to_bins_": 2, "bound": [2, 4, 14, 17], "bounds_dim": 2, "bounds_to_bin": 2, "d": [2, 7, 21, 22, 23], "_marc_diff_z_signatur": 3, "void": 3, "float32": 3, "_marc_diff_z": 3, "model_temp": 3, "model_depth": 3, "bottom": 3, "tag_temp": 3, "tag_depth": 3, "depth_thresh": 3, "result": 3, "marc_diff_z_numba": 3, "marc_diff_z": 3, "depth_threshold": 3, "0": [3, 4, 7, 9, 10, 11, 12, 25], "8": 3, "create_covari": 4, "cov": 4, "coord_nam": 4, "normal_at": 4, "grid": [4, 7, 9, 10, 11, 14, 17], "po": [4, 8], "ax": 4, "x": [4, 8, 9, 10, 11, 12, 14, 17, 23], "y": [4, 23, 25], "normal": [4, 9, 10, 11, 12, 20, 23], "fals": [4, 7, 9, 11], "multivari": 4, "refer": [4, 24, 25], "posit": [4, 7, 8], "mean": [4, 9, 11, 20], "dataarrai": [4, 7, 8, 9, 10, 11, 20], "covari": 4, "matrix": 4, "ha": [4, 7, 14, 17, 25], "have": [4, 7, 14, 17, 25], "dimens": [4, 7, 9, 10, 11, 20], "varianc": 4, "j": 4, "both": [4, 9, 11], "need": 4, "coordin": [4, 7, 9, 10, 11], "us": [4, 7, 9, 10, 11, 14, 17, 23, 25], "": [4, 7, 25], "accessor": 4, "understand": 4, "bool": [4, 7, 9, 11], "befor": [4, 23], "zero": 4, "coord": [4, 7, 8, 23], "dtype": 4, "float": [4, 7, 8, 9, 10, 11, 12, 14, 17, 20], "delta_at": 4, "method": [4, 5, 7, 9, 11, 14, 17], "nearest": 4, "spatial": [4, 9, 10, 11, 12], "delta": 4, "dirac": 4, "peak": 4, "point": [4, 7], "polygon": 4, "snap": 4, "One": 4, "search": [4, 7, 14, 17, 24], "center": [4, 7], "cartesian": [4, 7], "space": [4, 8], "perform": 4, "cell": [4, 7], "xvec": 4, "signal": 4, "unit_impuls": 4, "_discrete_gaussian_1d": 4, "sigma": [4, 8, 9, 10, 11, 12], "radiu": [4, 7], "_continuous_gaussian_1d": 4, "gaussian_kernel": 4, "truncat": [4, 9, 10, 11, 12], "4": [4, 7, 9, 10, 11, 12], "type": [4, 23], "continu": 4, "blur_edg": 5, "arr": [5, 23], "dim": [5, 7, 20, 21, 23], "filter_kwarg": 5, "lookup": 6, "map": [6, 9, 10, 11, 14, 17], "kei": 6, "messag": [6, 15], "unknown": 6, "pipelin": 6, "data": [6, 9, 10, 11, 12, 14, 17], "pipe": 6, "f": 6, "arg": 6, "kwarg": [6, 12, 17], "geographic_to_astronom": 7, "lat": 7, "lon": 7, "rot": 7, "transform": 7, "geograph": 7, "astronom": 7, "arrai": [7, 12, 20], "like": [7, 12, 20], "latitud": [7, 8, 23], "degre": 7, "longitud": [7, 8, 23], "two": 7, "element": 7, "rotat": 7, "shift": 7, "theta": 7, "colatitud": 7, "phi": 7, "astronomic_to_cartesian": 7, "name": [7, 9, 10, 11, 22, 25], "ang2vec": 7, "astronomic_to_cell_id": 7, "nside": 7, "comput": [7, 8, 9, 10, 11, 12, 20], "int": 7, "healpix": 7, "resolut": 7, "level": 7, "xr": 7, "cell_id": 7, "_compute_indic": 7, "_compute_coord": 7, "healpygridinfo": 7, "repres": 7, "dict": 7, "sphere": 7, "unstructur": 7, "indic": 7, "reorder": 7, "flatten": 7, "2d": 7, "unstructured_to_2d": 7, "keep_attr": 7, "drop_conflict": 7, "to_xarrai": 7, "concat": 7, "iter": [7, 17], "uniqu": 7, "create_grid": 7, "_compute_weight": 7, "source_lat": 7, "source_lon": 7, "_weights_to_spars": 7, "weight": 7, "healpyregridd": 7, "regrid": 7, "face": 7, "input_grid": 7, "input": [7, 14, 17], "For": 7, "now": [7, 25], "output_grid": 7, "target": 7, "weights_path": 7, "o": 7, "pathlik": 7, "none": [7, 9, 10, 11, 12, 22, 23], "__post_init__": 7, "regrid_d": 7, "same": [7, 9, 10, 11, 25], "restrict": 7, "linear": 7, "interpol": 7, "so": [7, 25], "far": 7, "buffer_point": 7, "buffer_s": 7, "sphere_radiu": 7, "6371000": 7, "factor": [7, 9, 10, 11, 12], "intersect": 7, "select": [7, 9, 10, 11], "within": [7, 14, 17], "circular": 7, "buffer": 7, "around": 7, "size": 7, "underli": 7, "convert": 7, "radian": 7, "By": 7, "standard": [7, 9, 10, 11, 12, 20], "earth": 7, "meter": 7, "increas": 7, "If": [7, 25], "where": 7, "true": 7, "which": 7, "mask": [7, 8, 9, 10, 11, 12, 20], "each": [7, 12], "ar": [7, 25], "everi": 7, "other": 7, "set": [7, 9, 10, 11, 25], "mean_track": 8, "modal_track": 8, "kernel_overlap": 8, "shape": 8, "kernel_shap": 8, "kernel_state_metr": 8, "previous_state_metr": 8, "previous_posit": 8, "kernel": [8, 12, 25], "viterbi": [8, 9, 11], "emiss": [8, 9, 10, 11, 12], "probabl": [8, 9, 10, 11, 12], "land": 8, "initi": [8, 9, 10, 11, 20], "final": [8, 9, 10, 11, 20], "differ": [8, 25], "compon": 8, "coeffici": 8, "diffus": 8, "pixel": [8, 9, 10, 11, 12], "state_metr": 8, "evolut": 8, "state": [8, 9, 10, 11, 12], "metric": 8, "over": 8, "time": [8, 9, 10, 11, 12, 21, 23], "integ": 8, "todo": 8, "label": 8, "without": 8, "naivegaussianrandomwalksthmm": [9, 10], "train": [9, 10, 11], "predict": [9, 10, 11, 12], "gaussian": [9, 10, 11, 12], "random": [9, 10, 11], "walk": [9, 10, 11], "hidden": [9, 10, 11, 12], "markov": [9, 10, 11], "primari": [9, 10, 11], "deviat": [9, 10, 11, 12, 20], "distanc": [9, 10, 11], "unit": [9, 10, 11, 12], "travel": [9, 10, 11], "fish": [9, 10, 11, 25], "cut": [9, 10, 11], "off": [9, 10, 11], "limit": [9, 10, 11], "togeth": [9, 10, 11], "calcul": [9, 10, 11], "maximum": [9, 10, 11], "set_param": [9, 10, 11, 14, 17], "param": [9, 10, 11, 14, 17], "new": [9, 10, 11], "instanc": [9, 10, 11], "_forward_algorithm": [9, 10, 11], "spatial_dim": [9, 10, 11], "temporal_dim": [9, 10, 11], "_forward_backward_algorithm": [9, 10, 11], "predict_proba": [9, 10, 11], "done": [9, 10, 11], "appli": [9, 10, 11, 12, 23], "forward": [9, 10, 11, 12], "backward": [9, 10, 11, 12], "algorithm": [9, 10, 11], "should": [9, 10, 11, 25], "variabl": [9, 10, 11, 20, 23], "ocean": [9, 10, 11], "option": [9, 10, 11, 12, 14, 17], "tempor": [9, 10, 11], "state_prob": [9, 10, 11], "score": [9, 10, 11, 12, 14, 17], "fit": [9, 10, 11, 12, 14, 17], "neg": [9, 10, 11], "logarithm": [9, 10, 11], "current": [9, 10, 11], "eagerscoreestim": [9, 11], "to_dict": [9, 11], "_score": [9, 11], "_backward_algorithm": [9, 11], "mode": [9, 11], "is_stat": [9, 11], "sequenc": [9, 11, 14, 17], "one": [9, 11], "centroid": [9, 11], "determin": [9, 11], "most": [9, 11], "whether": [9, 11], "precomput": [9, 11], "gaussian_filt": 12, "single_pass": 12, "initial_prob": 12, "final_prob": 12, "singl": [12, 14, 17], "pass": 12, "densiti": 12, "observ": 12, "first": [12, 25], "last": 12, "A": [12, 14, 17], "after": 12, "step": [12, 25], "No": 12, "shadow": 12, "yet": 12, "posterior_prob": 12, "measur": 12, "how": [12, 25], "well": 12, "forward_backward": 12, "doubl": 12, "eagerboundssearch": [14, 17], "param_bound": [14, 17], "optimizer_kwarg": [14, 17], "an": [14, 17, 25], "object": [14, 17], "onli": [14, 17], "support": [14, 17], "moment": [14, 17], "lower": [14, 17], "upper": [14, 17], "addit": [14, 17], "gridsearch": [14, 17], "search_grid": [14, 17], "targetboundssearch": [14, 17], "x0": [14, 17], "create_default_formatt": 15, "formatt": 15, "suppos": 15, "directli": 15, "access": 15, "librari": [15, 25], "user": [15, 25], "setup_log": 15, "logger": [15, 16], "client": 16, "get_client": 16, "isolated_cli": 16, "marc_sigma_to_depth": 19, "sampl": 20, "std": 20, "combin": 20, "independ": 20, "layer": 20, "along": 20, "combine_emission_pdf": 20, "raw": 20, "exclud": 20, "to_time_slic": 21, "adapt_model_tim": 21, "slice_": 21, "assign_group_label": 21, "index": [21, 24], "bin_dim": 21, "other_dim": 21, "reshape_by_bin": 21, "bin": 21, "bincount": 21, "ob": 21, "to_trajectori": 22, "cr": [22, 23], "additional_quant": 22, "traj": 22, "quantiti": 22, "clear_attr": 23, "obj": 23, "_drop_attr": 23, "attr": 23, "drop_cr": 23, "spatial_ref": 23, "remov": 23, "unfortun": 23, "rioxarrai": 23, "odc": 23, "geo": 23, "store": 23, "format": 23, "serializ": 23, "netcdf4": 23, "zarr": 23, "could": 23, "solv": 23, "registri": 23, "encod": 23, "would": 23, "until": 23, "implement": 23, "we": [23, 25], "ll": 23, "just": 23, "drop": 23, "write": 23, "postprocess_depth": 23, "_detect_dim": 23, "guess": 23, "_detect_spatial_dim": 23, "_detect_temporal_dim": 23, "t": 23, "units_r": 23, "timedelta_unit": 23, "temporal_resolut": 23, "encode_posit": 23, "df": 23, "decode_posit": 23, "instal": 24, "usag": 24, "api": 24, "modul": 24, "explain": 25, "panego": 25, "your": 25, "environn": 25, "run": 25, "notebook": 25, "In": 25, "section": 25, "assum": 25, "you": 25, "alreadi": 25, "wsl": 25, "conda": 25, "up": 25, "window": 25, "pleas": 25, "pangeo": 25, "readi": 25, "good": 25, "go": 25, "clone": 25, "repo": 25, "git": 25, "http": 25, "github": 25, "com": 25, "iaocea": 25, "Then": 25, "follow": 25, "command": 25, "micromamba": 25, "n": 25, "python": 25, "3": 25, "11": 25, "jupyterlab": 25, "holoview": 25, "16": 25, "2": 25, "intak": 25, "zstandard": 25, "cf_xarrai": 25, "h5netcdf": 25, "hvplot": 25, "datashad": 25, "pint": 25, "dask": 25, "imag": 25, "movingpanda": 25, "geoview": 25, "10": 25, "cmocean": 25, "geopanda": 25, "cartopi": 25, "ffmpeg": 25, "labextens": 25, "papermil": 25, "requir": 25, "make": 25, "lib": 25, "work": 25, "sinc": 25, "itself": 25, "been": 25, "publish": 25, "anywher": 25, "sourc": 25, "cd": 25, "pip": 25, "e": 25, "And": 25, "ipython": 25, "hpc": 25, "reproduc": 25, "abov": 25, "jsut": 25, "add": 25, "config": 25, "hpcconfig": 25, "those": 25}, "objects": {"": [[18, 0, 0, "-", "pangeo_fish"]], "pangeo_fish": [[1, 0, 0, "-", "acoustic"], [2, 0, 0, "-", "cf"], [3, 0, 0, "-", "diff"], [4, 0, 0, "-", "distributions"], [5, 0, 0, "-", "filters"], [6, 0, 0, "-", "functoolz"], [7, 0, 0, "-", "healpy"], [13, 0, 0, "-", "hmm"], [19, 0, 0, "-", "model"], [20, 0, 0, "-", "pdf"], [21, 0, 0, "-", "tags"], [22, 0, 0, "-", "tracks"], [23, 0, 0, "-", "utils"]], "pangeo_fish.acoustic": [[1, 1, 1, "", "count_detections"], [1, 1, 1, "", "extract_receivers"], [1, 1, 1, "", "search_acoustic_tag_id"]], "pangeo_fish.cf": [[2, 1, 1, "", "bounds_to_bins"], [2, 1, 1, "", "bounds_to_bins_"]], "pangeo_fish.diff": [[3, 1, 1, "", "_marc_diff_z"], [3, 2, 1, "", "_marc_diff_z_signatures"], [3, 1, 1, "", "marc_diff_z"], [3, 1, 1, "", "marc_diff_z_numba"]], "pangeo_fish.distributions": [[4, 1, 1, "", "_continuous_gaussian_1d"], [4, 1, 1, "", "_discrete_gaussian_1d"], [4, 1, 1, "", "create_covariances"], [4, 1, 1, "", "delta_at"], [4, 1, 1, "", "gaussian_kernel"], [4, 1, 1, "", "normal_at"], [4, 1, 1, "", "zeros"]], "pangeo_fish.filters": [[5, 1, 1, "", "blur_edges"]], "pangeo_fish.functoolz": [[6, 3, 1, "", "Pipeline"], [6, 1, 1, "", "lookup"]], "pangeo_fish.functoolz.Pipeline": [[6, 4, 1, "", "pipe"]], "pangeo_fish.healpy": [[7, 3, 1, "", "HealpyGridInfo"], [7, 3, 1, "", "HealpyRegridder"], [7, 1, 1, "", "_compute_coords"], [7, 1, 1, "", "_compute_indices"], [7, 1, 1, "", "_compute_weights"], [7, 1, 1, "", "_weights_to_sparse"], [7, 1, 1, "", "astronomic_to_cartesian"], [7, 1, 1, "", "astronomic_to_cell_ids"], [7, 1, 1, "", "buffer_points"], [7, 1, 1, "", "concat"], [7, 1, 1, "", "create_grid"], [7, 1, 1, "", "geographic_to_astronomic"], [7, 1, 1, "", "unique"]], "pangeo_fish.healpy.HealpyGridInfo": [[7, 5, 1, "", "coords"], [7, 5, 1, "", "indices"], [7, 5, 1, "", "nside"], [7, 5, 1, "", "rot"], [7, 4, 1, "", "to_xarray"], [7, 4, 1, "", "unstructured_to_2d"]], "pangeo_fish.healpy.HealpyRegridder": [[7, 4, 1, "", "__post_init__"], [7, 5, 1, "", "input_grid"], [7, 5, 1, "", "output_grid"], [7, 4, 1, "", "regrid_ds"], [7, 5, 1, "", "weights"], [7, 5, 1, "", "weights_path"]], "pangeo_fish.hmm": [[8, 0, 0, "-", "decode"], [9, 0, 0, "-", "estimator"], [12, 0, 0, "-", "filter"], [14, 0, 0, "-", "optimize"]], "pangeo_fish.hmm.decode": [[8, 1, 1, "", "kernel_overlap"], [8, 1, 1, "", "kernel_state_metric"], [8, 1, 1, "", "mean_track"], [8, 1, 1, "", "modal_track"], [8, 1, 1, "", "viterbi"]], "pangeo_fish.hmm.estimator": [[9, 3, 1, "", "EagerScoreEstimator"], [9, 3, 1, "", "NaiveGaussianRandomWalkSTHMM"], [10, 0, 0, "-", "naive"], [11, 0, 0, "-", "split"]], "pangeo_fish.hmm.estimator.EagerScoreEstimator": [[9, 4, 1, "", "_backward_algorithm"], [9, 4, 1, "", "_forward_algorithm"], [9, 4, 1, "", "_forward_backward_algorithm"], [9, 4, 1, "", "_score"], [9, 4, 1, "", "decode"], [9, 4, 1, "", "predict_proba"], [9, 4, 1, "", "score"], [9, 4, 1, "", "set_params"], [9, 5, 1, "", "sigma"], [9, 4, 1, "", "to_dict"], [9, 5, 1, "", "truncate"]], "pangeo_fish.hmm.estimator.NaiveGaussianRandomWalkSTHMM": [[9, 4, 1, "", "_forward_algorithm"], [9, 4, 1, "", "_forward_backward_algorithm"], [9, 4, 1, "", "predict_proba"], [9, 4, 1, "", "score"], [9, 4, 1, "", "set_params"]], "pangeo_fish.hmm.estimator.naive": [[10, 3, 1, "", "NaiveGaussianRandomWalkSTHMM"]], "pangeo_fish.hmm.estimator.naive.NaiveGaussianRandomWalkSTHMM": [[10, 4, 1, "", "_forward_algorithm"], [10, 4, 1, "", "_forward_backward_algorithm"], [10, 4, 1, "", "predict_proba"], [10, 4, 1, "", "score"], [10, 4, 1, "", "set_params"]], "pangeo_fish.hmm.estimator.split": [[11, 3, 1, "", "EagerScoreEstimator"]], "pangeo_fish.hmm.estimator.split.EagerScoreEstimator": [[11, 4, 1, "", "_backward_algorithm"], [11, 4, 1, "", "_forward_algorithm"], [11, 4, 1, "", "_forward_backward_algorithm"], [11, 4, 1, "", "_score"], [11, 4, 1, "", "decode"], [11, 4, 1, "", "predict_proba"], [11, 4, 1, "", "score"], [11, 4, 1, "", "set_params"], [11, 5, 1, "", "sigma"], [11, 4, 1, "", "to_dict"], [11, 5, 1, "", "truncate"]], "pangeo_fish.hmm.filter": [[12, 1, 1, "", "backward"], [12, 1, 1, "", "forward"], [12, 1, 1, "", "forward_backward"], [12, 1, 1, "", "gaussian_filter"], [12, 1, 1, "", "predict"], [12, 1, 1, "", "score"], [12, 1, 1, "", "single_pass"]], "pangeo_fish.hmm.optimize": [[14, 3, 1, "", "EagerBoundsSearch"], [14, 3, 1, "", "GridSearch"], [14, 3, 1, "", "TargetBoundsSearch"], [15, 0, 0, "-", "logging"], [16, 0, 0, "-", "optuna"], [17, 0, 0, "-", "scipy"]], "pangeo_fish.hmm.optimize.EagerBoundsSearch": [[14, 4, 1, "", "fit"]], "pangeo_fish.hmm.optimize.GridSearch": [[14, 4, 1, "", "fit"]], "pangeo_fish.hmm.optimize.TargetBoundsSearch": [[14, 4, 1, "", "fit"]], "pangeo_fish.hmm.optimize.logging": [[15, 1, 1, "", "create_default_formatter"], [15, 1, 1, "", "setup_logging"]], "pangeo_fish.hmm.optimize.optuna": [[16, 2, 1, "", "clients"], [16, 1, 1, "", "get_client"], [16, 1, 1, "", "isolated_clients"], [16, 2, 1, "", "logger"]], "pangeo_fish.hmm.optimize.scipy": [[17, 3, 1, "", "EagerBoundsSearch"], [17, 3, 1, "", "GridSearch"], [17, 3, 1, "", "TargetBoundsSearch"], [17, 1, 1, "", "track"]], "pangeo_fish.hmm.optimize.scipy.EagerBoundsSearch": [[17, 4, 1, "", "fit"]], "pangeo_fish.hmm.optimize.scipy.GridSearch": [[17, 4, 1, "", "fit"]], "pangeo_fish.hmm.optimize.scipy.TargetBoundsSearch": [[17, 4, 1, "", "fit"]], "pangeo_fish.model": [[19, 1, 1, "", "marc_sigma_to_depth"]], "pangeo_fish.pdf": [[20, 1, 1, "", "combine_emission_pdf"], [20, 1, 1, "", "normal"]], "pangeo_fish.tags": [[21, 1, 1, "", "adapt_model_time"], [21, 1, 1, "", "assign_group_labels"], [21, 1, 1, "", "reshape_by_bins"], [21, 1, 1, "", "to_time_slice"]], "pangeo_fish.tracks": [[22, 1, 1, "", "additional_quantities"], [22, 1, 1, "", "to_trajectory"]], "pangeo_fish.utils": [[23, 1, 1, "", "_detect_dims"], [23, 1, 1, "", "_detect_spatial_dims"], [23, 1, 1, "", "_detect_temporal_dims"], [23, 1, 1, "", "_drop_attr"], [23, 1, 1, "", "clear_attrs"], [23, 1, 1, "", "decode_positions"], [23, 1, 1, "", "drop_crs"], [23, 1, 1, "", "encode_positions"], [23, 1, 1, "", "normalize"], [23, 1, 1, "", "postprocess_depth"], [23, 1, 1, "", "temporal_resolution"], [23, 1, 1, "", "timedelta_units"], [23, 2, 1, "", "units_re"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:method", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": 0, "refer": 0, "pangeo_fish": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "acoust": 1, "modul": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23], "function": [1, 2, 3, 4, 5, 6, 7, 8, 12, 15, 16, 17, 19, 20, 21, 22, 23], "paramet": [1, 4, 7, 8, 9, 10, 11, 12, 14, 17, 20], "return": [1, 4, 7, 8, 9, 10, 11, 12, 14, 17, 20], "rais": 1, "see": [1, 4, 7], "also": [1, 4, 7], "cf": 2, "diff": 3, "attribut": [3, 7, 16, 23], "distribut": 4, "filter": [5, 12], "functoolz": 6, "class": [6, 7, 9, 10, 11, 14, 17], "healpi": 7, "hmm": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "decod": 8, "estim": [9, 10, 11], "submodul": [9, 13, 14, 18], "packag": [9, 14], "naiv": 10, "split": 11, "subpackag": [13, 18], "optim": [14, 15, 16, 17], "log": 15, "optuna": 16, "scipi": 17, "model": 19, "pdf": 20, "tag": 21, "track": 22, "util": 23, "welcom": 24, "pangeo": 24, "fish": 24, "": 24, "document": 24, "indic": 24, "tabl": 24, "instal": 25, "local": 25, "comput": 25, "datarmor": 25, "usag": 26}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "pangeo_fish.acoustic": [[1, "pangeo-fish-acoustic"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [12, "functions"], [15, "functions"], [16, "functions"], [17, "functions"], [19, "functions"], [20, "functions"], [21, "functions"], [22, "functions"], [23, "functions"]], "Parameters": [[1, "parameters"], [1, "id1"], [1, "id3"], [4, "parameters"], [4, "id1"], [7, "parameters"], [7, "id1"], [7, "id3"], [7, "id5"], [7, "id6"], [7, "id8"], [8, "parameters"], [9, "parameters"], [9, "id1"], [9, "id4"], [9, "id5"], [9, "id6"], [9, "id7"], [9, "id10"], [9, "id12"], [9, "id14"], [10, "parameters"], [10, "id1"], [10, "id4"], [10, "id5"], [11, "parameters"], [11, "id1"], [11, "id4"], [11, "id5"], [11, "id6"], [12, "parameters"], [12, "id1"], [12, "id3"], [12, "id5"], [14, "parameters"], [14, "id1"], [14, "id2"], [14, "id3"], [14, "id5"], [14, "id6"], [17, "parameters"], [17, "id1"], [17, "id2"], [17, "id3"], [17, "id5"], [17, "id6"], [20, "parameters"]], "Returns": [[1, "returns"], [1, "id2"], [1, "id4"], [4, "returns"], [7, "returns"], [7, "id2"], [7, "id4"], [7, "id7"], [7, "id9"], [8, "returns"], [9, "returns"], [9, "id11"], [10, "returns"], [11, "returns"], [12, "returns"], [12, "id2"], [12, "id4"], [12, "id6"], [14, "returns"], [14, "id4"], [14, "id7"], [17, "returns"], [17, "id4"], [17, "id7"], [20, "returns"]], "Raises": [[1, "raises"]], "See Also": [[1, "see-also"], [4, "see-also"], [7, "see-also"], [7, "id10"]], "pangeo_fish.cf": [[2, "pangeo-fish-cf"]], "pangeo_fish.diff": [[3, "pangeo-fish-diff"]], "Attributes": [[3, "attributes"], [7, "attributes"], [16, "attributes"], [23, "attributes"]], "pangeo_fish.distributions": [[4, "pangeo-fish-distributions"]], "pangeo_fish.filters": [[5, "pangeo-fish-filters"]], "pangeo_fish.functoolz": [[6, "pangeo-fish-functoolz"]], "Classes": [[6, "classes"], [7, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [14, "classes"], [17, "classes"]], "pangeo_fish.healpy": [[7, "pangeo-fish-healpy"]], "pangeo_fish.hmm.decode": [[8, "pangeo-fish-hmm-decode"]], "pangeo_fish.hmm.estimator": [[9, "pangeo-fish-hmm-estimator"]], "Submodules": [[9, "submodules"], [13, "submodules"], [14, "submodules"], [18, "submodules"]], "Package Contents": [[9, "package-contents"], [14, "package-contents"]], "Return": [[9, "return"], [9, "id13"], [10, "return"], [11, "return"]], "pangeo_fish.hmm.estimator.naive": [[10, "pangeo-fish-hmm-estimator-naive"]], "pangeo_fish.hmm.estimator.split": [[11, "pangeo-fish-hmm-estimator-split"]], "pangeo_fish.hmm.filter": [[12, "pangeo-fish-hmm-filter"]], "pangeo_fish.hmm": [[13, "pangeo-fish-hmm"]], "Subpackages": [[13, "subpackages"], [18, "subpackages"]], "pangeo_fish.hmm.optimize": [[14, "pangeo-fish-hmm-optimize"]], "pangeo_fish.hmm.optimize.logging": [[15, "pangeo-fish-hmm-optimize-logging"]], "pangeo_fish.hmm.optimize.optuna": [[16, "pangeo-fish-hmm-optimize-optuna"]], "pangeo_fish.hmm.optimize.scipy": [[17, "pangeo-fish-hmm-optimize-scipy"]], "pangeo_fish": [[18, "pangeo-fish"]], "pangeo_fish.model": [[19, "pangeo-fish-model"]], "pangeo_fish.pdf": [[20, "pangeo-fish-pdf"]], "pangeo_fish.tags": [[21, "pangeo-fish-tags"]], "pangeo_fish.tracks": [[22, "pangeo-fish-tracks"]], "pangeo_fish.utils": [[23, "pangeo-fish-utils"]], "Welcome to pangeo-fish\u2019s documentation !": [[24, "welcome-to-pangeo-fish-s-documentation"]], "Indices and tables": [[24, "indices-and-tables"]], "Installation": [[25, "installation"]], "Local computer": [[25, "local-computer"]], "Datarmor": [[25, "datarmor"]], "Usage": [[26, "usage"]]}, "indexentries": {"count_detections() (in module pangeo_fish.acoustic)": [[1, "pangeo_fish.acoustic.count_detections"]], "extract_receivers() (in module pangeo_fish.acoustic)": [[1, "pangeo_fish.acoustic.extract_receivers"]], "module": [[1, "module-pangeo_fish.acoustic"], [2, "module-pangeo_fish.cf"], [3, "module-pangeo_fish.diff"], [4, "module-pangeo_fish.distributions"], [5, "module-pangeo_fish.filters"], [6, "module-pangeo_fish.functoolz"], [7, "module-pangeo_fish.healpy"], [8, "module-pangeo_fish.hmm.decode"], [9, "module-pangeo_fish.hmm.estimator"], [10, "module-pangeo_fish.hmm.estimator.naive"], [11, "module-pangeo_fish.hmm.estimator.split"], [12, "module-pangeo_fish.hmm.filter"], [13, "module-pangeo_fish.hmm"], [14, "module-pangeo_fish.hmm.optimize"], [15, "module-pangeo_fish.hmm.optimize.logging"], [16, "module-pangeo_fish.hmm.optimize.optuna"], [17, "module-pangeo_fish.hmm.optimize.scipy"], [18, "module-pangeo_fish"], [19, "module-pangeo_fish.model"], [20, "module-pangeo_fish.pdf"], [21, "module-pangeo_fish.tags"], [22, "module-pangeo_fish.tracks"], [23, "module-pangeo_fish.utils"]], "pangeo_fish.acoustic": [[1, "module-pangeo_fish.acoustic"]], "search_acoustic_tag_id() (in module pangeo_fish.acoustic)": [[1, "pangeo_fish.acoustic.search_acoustic_tag_id"]], "bounds_to_bins() (in module pangeo_fish.cf)": [[2, "pangeo_fish.cf.bounds_to_bins"]], "bounds_to_bins_() (in module pangeo_fish.cf)": [[2, "pangeo_fish.cf.bounds_to_bins_"]], "pangeo_fish.cf": [[2, "module-pangeo_fish.cf"]], "_marc_diff_z() (in module pangeo_fish.diff)": [[3, "pangeo_fish.diff._marc_diff_z"]], "_marc_diff_z_signatures (in module pangeo_fish.diff)": [[3, "pangeo_fish.diff._marc_diff_z_signatures"]], "marc_diff_z() (in module pangeo_fish.diff)": [[3, "pangeo_fish.diff.marc_diff_z"]], "marc_diff_z_numba() (in module pangeo_fish.diff)": [[3, "pangeo_fish.diff.marc_diff_z_numba"]], "pangeo_fish.diff": [[3, "module-pangeo_fish.diff"]], "_continuous_gaussian_1d() (in module pangeo_fish.distributions)": [[4, "pangeo_fish.distributions._continuous_gaussian_1d"]], "_discrete_gaussian_1d() (in module pangeo_fish.distributions)": [[4, "pangeo_fish.distributions._discrete_gaussian_1d"]], "create_covariances() (in module pangeo_fish.distributions)": [[4, "pangeo_fish.distributions.create_covariances"]], "delta_at() (in module pangeo_fish.distributions)": [[4, "pangeo_fish.distributions.delta_at"]], "gaussian_kernel() (in module pangeo_fish.distributions)": [[4, "pangeo_fish.distributions.gaussian_kernel"]], "normal_at() (in module pangeo_fish.distributions)": [[4, "pangeo_fish.distributions.normal_at"]], "pangeo_fish.distributions": [[4, "module-pangeo_fish.distributions"]], "zeros() (in module pangeo_fish.distributions)": [[4, "pangeo_fish.distributions.zeros"]], "blur_edges() (in module pangeo_fish.filters)": [[5, "pangeo_fish.filters.blur_edges"]], "pangeo_fish.filters": [[5, "module-pangeo_fish.filters"]], "pipeline (class in pangeo_fish.functoolz)": [[6, "pangeo_fish.functoolz.Pipeline"]], "lookup() (in module pangeo_fish.functoolz)": [[6, "pangeo_fish.functoolz.lookup"]], "pangeo_fish.functoolz": [[6, "module-pangeo_fish.functoolz"]], "pipe() (pangeo_fish.functoolz.pipeline method)": [[6, "pangeo_fish.functoolz.Pipeline.pipe"]], "healpygridinfo (class in pangeo_fish.healpy)": [[7, "pangeo_fish.healpy.HealpyGridInfo"]], "healpyregridder (class in pangeo_fish.healpy)": [[7, "pangeo_fish.healpy.HealpyRegridder"]], "__post_init__() (pangeo_fish.healpy.healpyregridder method)": [[7, "pangeo_fish.healpy.HealpyRegridder.__post_init__"]], "_compute_coords() (in module pangeo_fish.healpy)": [[7, "pangeo_fish.healpy._compute_coords"]], "_compute_indices() (in module pangeo_fish.healpy)": [[7, "pangeo_fish.healpy._compute_indices"]], "_compute_weights() (in module pangeo_fish.healpy)": [[7, "pangeo_fish.healpy._compute_weights"]], "_weights_to_sparse() (in module pangeo_fish.healpy)": [[7, "pangeo_fish.healpy._weights_to_sparse"]], "astronomic_to_cartesian() (in module pangeo_fish.healpy)": [[7, "pangeo_fish.healpy.astronomic_to_cartesian"]], "astronomic_to_cell_ids() (in module pangeo_fish.healpy)": [[7, "pangeo_fish.healpy.astronomic_to_cell_ids"]], "buffer_points() (in module pangeo_fish.healpy)": [[7, "pangeo_fish.healpy.buffer_points"]], "concat() (in module pangeo_fish.healpy)": [[7, "pangeo_fish.healpy.concat"]], "coords (pangeo_fish.healpy.healpygridinfo attribute)": [[7, "pangeo_fish.healpy.HealpyGridInfo.coords"]], "create_grid() (in module pangeo_fish.healpy)": [[7, "pangeo_fish.healpy.create_grid"]], "geographic_to_astronomic() (in module pangeo_fish.healpy)": [[7, "pangeo_fish.healpy.geographic_to_astronomic"]], "indices (pangeo_fish.healpy.healpygridinfo attribute)": [[7, "pangeo_fish.healpy.HealpyGridInfo.indices"]], "input_grid (pangeo_fish.healpy.healpyregridder attribute)": [[7, "pangeo_fish.healpy.HealpyRegridder.input_grid"]], "nside (pangeo_fish.healpy.healpygridinfo attribute)": [[7, "pangeo_fish.healpy.HealpyGridInfo.nside"]], "output_grid (pangeo_fish.healpy.healpyregridder attribute)": [[7, "pangeo_fish.healpy.HealpyRegridder.output_grid"]], "pangeo_fish.healpy": [[7, "module-pangeo_fish.healpy"]], "regrid_ds() (pangeo_fish.healpy.healpyregridder method)": [[7, "pangeo_fish.healpy.HealpyRegridder.regrid_ds"]], "rot (pangeo_fish.healpy.healpygridinfo attribute)": [[7, "pangeo_fish.healpy.HealpyGridInfo.rot"]], "to_xarray() (pangeo_fish.healpy.healpygridinfo method)": [[7, "pangeo_fish.healpy.HealpyGridInfo.to_xarray"]], "unique() (in module pangeo_fish.healpy)": [[7, "pangeo_fish.healpy.unique"]], "unstructured_to_2d() (pangeo_fish.healpy.healpygridinfo method)": [[7, "pangeo_fish.healpy.HealpyGridInfo.unstructured_to_2d"]], "weights (pangeo_fish.healpy.healpyregridder attribute)": [[7, "pangeo_fish.healpy.HealpyRegridder.weights"]], "weights_path (pangeo_fish.healpy.healpyregridder attribute)": [[7, "pangeo_fish.healpy.HealpyRegridder.weights_path"]], "kernel_overlap() (in module pangeo_fish.hmm.decode)": [[8, "pangeo_fish.hmm.decode.kernel_overlap"]], "kernel_state_metric() (in module pangeo_fish.hmm.decode)": [[8, "pangeo_fish.hmm.decode.kernel_state_metric"]], "mean_track() (in module pangeo_fish.hmm.decode)": [[8, "pangeo_fish.hmm.decode.mean_track"]], "modal_track() (in module pangeo_fish.hmm.decode)": [[8, "pangeo_fish.hmm.decode.modal_track"]], "pangeo_fish.hmm.decode": [[8, "module-pangeo_fish.hmm.decode"]], "viterbi() (in module pangeo_fish.hmm.decode)": [[8, "pangeo_fish.hmm.decode.viterbi"]], "eagerscoreestimator (class in pangeo_fish.hmm.estimator)": [[9, "pangeo_fish.hmm.estimator.EagerScoreEstimator"]], "naivegaussianrandomwalksthmm (class in pangeo_fish.hmm.estimator)": [[9, "pangeo_fish.hmm.estimator.NaiveGaussianRandomWalkSTHMM"]], "_backward_algorithm() (pangeo_fish.hmm.estimator.eagerscoreestimator method)": [[9, "pangeo_fish.hmm.estimator.EagerScoreEstimator._backward_algorithm"]], "_forward_algorithm() (pangeo_fish.hmm.estimator.eagerscoreestimator method)": [[9, "pangeo_fish.hmm.estimator.EagerScoreEstimator._forward_algorithm"]], "_forward_algorithm() (pangeo_fish.hmm.estimator.naivegaussianrandomwalksthmm method)": [[9, "pangeo_fish.hmm.estimator.NaiveGaussianRandomWalkSTHMM._forward_algorithm"]], "_forward_backward_algorithm() (pangeo_fish.hmm.estimator.eagerscoreestimator method)": [[9, "pangeo_fish.hmm.estimator.EagerScoreEstimator._forward_backward_algorithm"]], "_forward_backward_algorithm() (pangeo_fish.hmm.estimator.naivegaussianrandomwalksthmm method)": [[9, "pangeo_fish.hmm.estimator.NaiveGaussianRandomWalkSTHMM._forward_backward_algorithm"]], "_score() (pangeo_fish.hmm.estimator.eagerscoreestimator method)": [[9, "pangeo_fish.hmm.estimator.EagerScoreEstimator._score"]], "decode() (pangeo_fish.hmm.estimator.eagerscoreestimator method)": [[9, "pangeo_fish.hmm.estimator.EagerScoreEstimator.decode"]], "pangeo_fish.hmm.estimator": [[9, "module-pangeo_fish.hmm.estimator"]], "predict_proba() (pangeo_fish.hmm.estimator.eagerscoreestimator method)": [[9, "pangeo_fish.hmm.estimator.EagerScoreEstimator.predict_proba"]], "predict_proba() (pangeo_fish.hmm.estimator.naivegaussianrandomwalksthmm method)": [[9, "pangeo_fish.hmm.estimator.NaiveGaussianRandomWalkSTHMM.predict_proba"]], "score() (pangeo_fish.hmm.estimator.eagerscoreestimator method)": [[9, "pangeo_fish.hmm.estimator.EagerScoreEstimator.score"]], "score() (pangeo_fish.hmm.estimator.naivegaussianrandomwalksthmm method)": [[9, "pangeo_fish.hmm.estimator.NaiveGaussianRandomWalkSTHMM.score"]], "set_params() (pangeo_fish.hmm.estimator.eagerscoreestimator method)": [[9, "pangeo_fish.hmm.estimator.EagerScoreEstimator.set_params"]], "set_params() (pangeo_fish.hmm.estimator.naivegaussianrandomwalksthmm method)": [[9, "pangeo_fish.hmm.estimator.NaiveGaussianRandomWalkSTHMM.set_params"]], "sigma (pangeo_fish.hmm.estimator.eagerscoreestimator attribute)": [[9, "pangeo_fish.hmm.estimator.EagerScoreEstimator.sigma"]], "to_dict() (pangeo_fish.hmm.estimator.eagerscoreestimator method)": [[9, "pangeo_fish.hmm.estimator.EagerScoreEstimator.to_dict"]], "truncate (pangeo_fish.hmm.estimator.eagerscoreestimator attribute)": [[9, "pangeo_fish.hmm.estimator.EagerScoreEstimator.truncate"]], "naivegaussianrandomwalksthmm (class in pangeo_fish.hmm.estimator.naive)": [[10, "pangeo_fish.hmm.estimator.naive.NaiveGaussianRandomWalkSTHMM"]], "_forward_algorithm() (pangeo_fish.hmm.estimator.naive.naivegaussianrandomwalksthmm method)": [[10, "pangeo_fish.hmm.estimator.naive.NaiveGaussianRandomWalkSTHMM._forward_algorithm"]], "_forward_backward_algorithm() (pangeo_fish.hmm.estimator.naive.naivegaussianrandomwalksthmm method)": [[10, "pangeo_fish.hmm.estimator.naive.NaiveGaussianRandomWalkSTHMM._forward_backward_algorithm"]], "pangeo_fish.hmm.estimator.naive": [[10, "module-pangeo_fish.hmm.estimator.naive"]], "predict_proba() (pangeo_fish.hmm.estimator.naive.naivegaussianrandomwalksthmm method)": [[10, "pangeo_fish.hmm.estimator.naive.NaiveGaussianRandomWalkSTHMM.predict_proba"]], "score() (pangeo_fish.hmm.estimator.naive.naivegaussianrandomwalksthmm method)": [[10, "pangeo_fish.hmm.estimator.naive.NaiveGaussianRandomWalkSTHMM.score"]], "set_params() (pangeo_fish.hmm.estimator.naive.naivegaussianrandomwalksthmm method)": [[10, "pangeo_fish.hmm.estimator.naive.NaiveGaussianRandomWalkSTHMM.set_params"]], "eagerscoreestimator (class in pangeo_fish.hmm.estimator.split)": [[11, "pangeo_fish.hmm.estimator.split.EagerScoreEstimator"]], "_backward_algorithm() (pangeo_fish.hmm.estimator.split.eagerscoreestimator method)": [[11, "pangeo_fish.hmm.estimator.split.EagerScoreEstimator._backward_algorithm"]], "_forward_algorithm() (pangeo_fish.hmm.estimator.split.eagerscoreestimator method)": [[11, "pangeo_fish.hmm.estimator.split.EagerScoreEstimator._forward_algorithm"]], "_forward_backward_algorithm() (pangeo_fish.hmm.estimator.split.eagerscoreestimator method)": [[11, "pangeo_fish.hmm.estimator.split.EagerScoreEstimator._forward_backward_algorithm"]], "_score() (pangeo_fish.hmm.estimator.split.eagerscoreestimator method)": [[11, "pangeo_fish.hmm.estimator.split.EagerScoreEstimator._score"]], "decode() (pangeo_fish.hmm.estimator.split.eagerscoreestimator method)": [[11, "pangeo_fish.hmm.estimator.split.EagerScoreEstimator.decode"]], "pangeo_fish.hmm.estimator.split": [[11, "module-pangeo_fish.hmm.estimator.split"]], "predict_proba() (pangeo_fish.hmm.estimator.split.eagerscoreestimator method)": [[11, "pangeo_fish.hmm.estimator.split.EagerScoreEstimator.predict_proba"]], "score() (pangeo_fish.hmm.estimator.split.eagerscoreestimator method)": [[11, "pangeo_fish.hmm.estimator.split.EagerScoreEstimator.score"]], "set_params() (pangeo_fish.hmm.estimator.split.eagerscoreestimator method)": [[11, "pangeo_fish.hmm.estimator.split.EagerScoreEstimator.set_params"]], "sigma (pangeo_fish.hmm.estimator.split.eagerscoreestimator attribute)": [[11, "pangeo_fish.hmm.estimator.split.EagerScoreEstimator.sigma"]], "to_dict() (pangeo_fish.hmm.estimator.split.eagerscoreestimator method)": [[11, "pangeo_fish.hmm.estimator.split.EagerScoreEstimator.to_dict"]], "truncate (pangeo_fish.hmm.estimator.split.eagerscoreestimator attribute)": [[11, "pangeo_fish.hmm.estimator.split.EagerScoreEstimator.truncate"]], "backward() (in module pangeo_fish.hmm.filter)": [[12, "pangeo_fish.hmm.filter.backward"]], "forward() (in module pangeo_fish.hmm.filter)": [[12, "pangeo_fish.hmm.filter.forward"]], "forward_backward() (in module pangeo_fish.hmm.filter)": [[12, "pangeo_fish.hmm.filter.forward_backward"]], "gaussian_filter() (in module pangeo_fish.hmm.filter)": [[12, "pangeo_fish.hmm.filter.gaussian_filter"]], "pangeo_fish.hmm.filter": [[12, "module-pangeo_fish.hmm.filter"]], "predict() (in module pangeo_fish.hmm.filter)": [[12, "pangeo_fish.hmm.filter.predict"]], "score() (in module pangeo_fish.hmm.filter)": [[12, "pangeo_fish.hmm.filter.score"]], "single_pass() (in module pangeo_fish.hmm.filter)": [[12, "pangeo_fish.hmm.filter.single_pass"]], "pangeo_fish.hmm": [[13, "module-pangeo_fish.hmm"]], "eagerboundssearch (class in pangeo_fish.hmm.optimize)": [[14, "pangeo_fish.hmm.optimize.EagerBoundsSearch"]], "gridsearch (class in pangeo_fish.hmm.optimize)": [[14, "pangeo_fish.hmm.optimize.GridSearch"]], "targetboundssearch (class in pangeo_fish.hmm.optimize)": [[14, "pangeo_fish.hmm.optimize.TargetBoundsSearch"]], "fit() (pangeo_fish.hmm.optimize.eagerboundssearch method)": [[14, "pangeo_fish.hmm.optimize.EagerBoundsSearch.fit"]], "fit() (pangeo_fish.hmm.optimize.gridsearch method)": [[14, "pangeo_fish.hmm.optimize.GridSearch.fit"]], "fit() (pangeo_fish.hmm.optimize.targetboundssearch method)": [[14, "pangeo_fish.hmm.optimize.TargetBoundsSearch.fit"]], "pangeo_fish.hmm.optimize": [[14, "module-pangeo_fish.hmm.optimize"]], "create_default_formatter() (in module pangeo_fish.hmm.optimize.logging)": [[15, "pangeo_fish.hmm.optimize.logging.create_default_formatter"]], "pangeo_fish.hmm.optimize.logging": [[15, "module-pangeo_fish.hmm.optimize.logging"]], "setup_logging() (in module pangeo_fish.hmm.optimize.logging)": [[15, "pangeo_fish.hmm.optimize.logging.setup_logging"]], "clients (in module pangeo_fish.hmm.optimize.optuna)": [[16, "pangeo_fish.hmm.optimize.optuna.clients"]], "get_client() (in module pangeo_fish.hmm.optimize.optuna)": [[16, "pangeo_fish.hmm.optimize.optuna.get_client"]], "isolated_clients() (in module pangeo_fish.hmm.optimize.optuna)": [[16, "pangeo_fish.hmm.optimize.optuna.isolated_clients"]], "logger (in module pangeo_fish.hmm.optimize.optuna)": [[16, "pangeo_fish.hmm.optimize.optuna.logger"]], "pangeo_fish.hmm.optimize.optuna": [[16, "module-pangeo_fish.hmm.optimize.optuna"]], "eagerboundssearch (class in pangeo_fish.hmm.optimize.scipy)": [[17, "pangeo_fish.hmm.optimize.scipy.EagerBoundsSearch"]], "gridsearch (class in pangeo_fish.hmm.optimize.scipy)": [[17, "pangeo_fish.hmm.optimize.scipy.GridSearch"]], "targetboundssearch (class in pangeo_fish.hmm.optimize.scipy)": [[17, "pangeo_fish.hmm.optimize.scipy.TargetBoundsSearch"]], "fit() (pangeo_fish.hmm.optimize.scipy.eagerboundssearch method)": [[17, "pangeo_fish.hmm.optimize.scipy.EagerBoundsSearch.fit"]], "fit() (pangeo_fish.hmm.optimize.scipy.gridsearch method)": [[17, "pangeo_fish.hmm.optimize.scipy.GridSearch.fit"]], "fit() (pangeo_fish.hmm.optimize.scipy.targetboundssearch method)": [[17, "pangeo_fish.hmm.optimize.scipy.TargetBoundsSearch.fit"]], "pangeo_fish.hmm.optimize.scipy": [[17, "module-pangeo_fish.hmm.optimize.scipy"]], "track() (in module pangeo_fish.hmm.optimize.scipy)": [[17, "pangeo_fish.hmm.optimize.scipy.track"]], "pangeo_fish": [[18, "module-pangeo_fish"]], "marc_sigma_to_depth() (in module pangeo_fish.model)": [[19, "pangeo_fish.model.marc_sigma_to_depth"]], "pangeo_fish.model": [[19, "module-pangeo_fish.model"]], "combine_emission_pdf() (in module pangeo_fish.pdf)": [[20, "pangeo_fish.pdf.combine_emission_pdf"]], "normal() (in module pangeo_fish.pdf)": [[20, "pangeo_fish.pdf.normal"]], "pangeo_fish.pdf": [[20, "module-pangeo_fish.pdf"]], "adapt_model_time() (in module pangeo_fish.tags)": [[21, "pangeo_fish.tags.adapt_model_time"]], "assign_group_labels() (in module pangeo_fish.tags)": [[21, "pangeo_fish.tags.assign_group_labels"]], "pangeo_fish.tags": [[21, "module-pangeo_fish.tags"]], "reshape_by_bins() (in module pangeo_fish.tags)": [[21, "pangeo_fish.tags.reshape_by_bins"]], "to_time_slice() (in module pangeo_fish.tags)": [[21, "pangeo_fish.tags.to_time_slice"]], "additional_quantities() (in module pangeo_fish.tracks)": [[22, "pangeo_fish.tracks.additional_quantities"]], "pangeo_fish.tracks": [[22, "module-pangeo_fish.tracks"]], "to_trajectory() (in module pangeo_fish.tracks)": [[22, "pangeo_fish.tracks.to_trajectory"]], "_detect_dims() (in module pangeo_fish.utils)": [[23, "pangeo_fish.utils._detect_dims"]], "_detect_spatial_dims() (in module pangeo_fish.utils)": [[23, "pangeo_fish.utils._detect_spatial_dims"]], "_detect_temporal_dims() (in module pangeo_fish.utils)": [[23, "pangeo_fish.utils._detect_temporal_dims"]], "_drop_attr() (in module pangeo_fish.utils)": [[23, "pangeo_fish.utils._drop_attr"]], "clear_attrs() (in module pangeo_fish.utils)": [[23, "pangeo_fish.utils.clear_attrs"]], "decode_positions() (in module pangeo_fish.utils)": [[23, "pangeo_fish.utils.decode_positions"]], "drop_crs() (in module pangeo_fish.utils)": [[23, "pangeo_fish.utils.drop_crs"]], "encode_positions() (in module pangeo_fish.utils)": [[23, "pangeo_fish.utils.encode_positions"]], "normalize() (in module pangeo_fish.utils)": [[23, "pangeo_fish.utils.normalize"]], "pangeo_fish.utils": [[23, "module-pangeo_fish.utils"]], "postprocess_depth() (in module pangeo_fish.utils)": [[23, "pangeo_fish.utils.postprocess_depth"]], "temporal_resolution() (in module pangeo_fish.utils)": [[23, "pangeo_fish.utils.temporal_resolution"]], "timedelta_units() (in module pangeo_fish.utils)": [[23, "pangeo_fish.utils.timedelta_units"]], "units_re (in module pangeo_fish.utils)": [[23, "pangeo_fish.utils.units_re"]]}})