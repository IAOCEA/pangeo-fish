:py:mod:`pangeo_fish.utils`
===========================

.. py:module:: pangeo_fish.utils


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   pangeo_fish.utils.clear_attrs
   pangeo_fish.utils._drop_attr
   pangeo_fish.utils.drop_crs
   pangeo_fish.utils.postprocess_depth
   pangeo_fish.utils.normalize
   pangeo_fish.utils._detect_dims
   pangeo_fish.utils._detect_spatial_dims
   pangeo_fish.utils._detect_temporal_dims
   pangeo_fish.utils.timedelta_units
   pangeo_fish.utils.temporal_resolution
   pangeo_fish.utils.encode_positions
   pangeo_fish.utils.decode_positions



Attributes
~~~~~~~~~~

.. autoapisummary::

   pangeo_fish.utils.units_re


.. py:function:: clear_attrs(obj, variables=None)


.. py:function:: _drop_attr(obj, attr)


.. py:function:: drop_crs(obj, coord='spatial_ref', attr='crs')

   remove crs attributes

   Unfortunately, `rioxarray` and `odc-geo` store the crs information in a format that
   is not serializable to `netcdf4` / `zarr`. This could be solved using a registry of
   type â†’ encoder that would be applied to the attrs, but until that is implemented,
   we'll just drop the crs before writing.


.. py:function:: postprocess_depth(ds)


.. py:function:: normalize(obj, dim)


.. py:function:: _detect_dims(ds, guesses)


.. py:function:: _detect_spatial_dims(ds, guesses=[['Y', 'X'], ['latitude', 'longitude'], ['x', 'y']])


.. py:function:: _detect_temporal_dims(ds, guesses=['T', 'time'])


.. py:data:: units_re

   

.. py:function:: timedelta_units(arr)


.. py:function:: temporal_resolution(time)


.. py:function:: encode_positions(df)


.. py:function:: decode_positions(attrs)


