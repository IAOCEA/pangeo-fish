:py:mod:`pangeo_fish.hmm.optimize`
==================================

.. py:module:: pangeo_fish.hmm.optimize


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   logging/index.rst
   optuna/index.rst
   scipy/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   pangeo_fish.hmm.optimize.EagerBoundsSearch
   pangeo_fish.hmm.optimize.GridSearch
   pangeo_fish.hmm.optimize.TargetBoundsSearch




.. py:class:: EagerBoundsSearch(estimator, param_bounds, *, optimizer_kwargs={})


   Optimize estimator parameters within an interval

   Parameters
   ----------
   estimator : Estimator
       The estimator object. Has to have the `set_params(**params) -> Estimator` and
       `score(data) -> float` methods. Only a single parameter is supported at the
       moment.
   param_bounds : sequence of float
       A sequence containing lower and upper bounds for the parameter.
   optimizer_kwargs : mapping, optional
       Additional parameters for the optimizer

   .. py:method:: fit(X)

      optimize the score of the estimator

      Parameters
      ----------
      X : Dataset
          The input data.

      Returns
      -------
      estimator
          The estimator with optimized parameters.



.. py:class:: GridSearch(estimator, search_grid)


   Optimize estimator parameters using a search grid

   Parameters
   ----------
   estimator : Estimator
       The estimator object. Has to have the `set_params(**params) -> Estimator` and
       `score(data) -> float` methods. Only a single parameter is supported at the
       moment.
   search_grid : mapping of str to sequence
       The search grid.

   .. py:method:: fit(X)

      search for optimal parameters

      Parameters
      ----------
      X : Dataset
          The input data.

      Returns
      -------
      optimized : Estimator
          The estimator with optimized parameters.



.. py:class:: TargetBoundsSearch(estimator, x0, param_bounds, *, optimizer_kwargs={})


   Optimize estimator parameters within an interval

   Parameters
   ----------
   estimator : Estimator
       The estimator object. Has to have the `set_params(**params) -> Estimator` and
       `score(data) -> float` methods. Only a single parameter is supported at the
       moment.
   param_bounds : sequence of float
       A sequence containing lower and upper bounds for the parameter.
   optimizer_kwargs : mapping, optional
       Additional parameters for the optimizer

   .. py:method:: fit(X)

      optimize the score of the estimator

      Parameters
      ----------
      X : Dataset
          The input data.

      Returns
      -------
      estimator
          The estimator with optimized parameters.



